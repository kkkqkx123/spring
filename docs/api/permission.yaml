openapi: 3.0.0
info:
  title: 权限模块 API
  description: 提供用户、角色和资源之间的权限管理功能。
  version: 1.0.0
tags:
  - name: 权限管理
    description: 管理用户角色和资源权限

paths:
  /api/permissions/users/{username}/resources:
    get:
      tags:
        - 权限管理
      summary: 获取用户可访问的资源
      description: 返回指定用户有权访问的所有资源列表。需要管理员权限。
      operationId: getUserResources
      security:
        - bearerAuth: []
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Resource'
        '401':
          description: 未经授权
        '403':
          description: 禁止访问

  /api/permissions/users/{username}/roles:
    get:
      tags:
        - 权限管理
      summary: 获取用户的角色
      description: 返回指定用户拥有的所有角色名称列表。需要管理员权限。
      operationId: getUserRoles
      security:
        - bearerAuth: []
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '401':
          description: 未经授权
        '403':
          description: 禁止访问

  /api/permissions/users/{username}/roles/{roleName}:
    post:
      tags:
        - 权限管理
      summary: 为用户分配角色
      description: 将一个角色分配给指定用户。需要管理员权限。
      operationId: assignRoleToUser
      security:
        - bearerAuth: []
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
        - name: roleName
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 分配成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: 未经授权
        '403':
          description: 禁止访问
        '404':
          description: 用户或角色未找到

    delete:
      tags:
        - 权限管理
      summary: 移除用户的角色
      description: 从指定用户移除一个角色。需要管理员权限。
      operationId: removeRoleFromUser
      security:
        - bearerAuth: []
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
        - name: roleName
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 移除成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: 未经授权
        '403':
          description: 禁止访问
        '404':
          description: 用户或角色未找到

  /api/permissions/roles/{roleName}/resources/{resourceId}:
    post:
      tags:
        - 权限管理
      summary: 为角色分配资源
      description: 将一个资源授权给指定角色。需要管理员权限。
      operationId: assignResourceToRole
      security:
        - bearerAuth: []
      parameters:
        - name: roleName
          in: path
          required: true
          schema:
            type: string
        - name: resourceId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 分配成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
        '401':
          description: 未经授权
        '403':
          description: 禁止访问
        '404':
          description: 角色或资源未找到

    delete:
      tags:
        - 权限管理
      summary: 移除角色的资源
      description: 从指定角色移除一个资源的访问权限。需要管理员权限。
      operationId: removeResourceFromRole
      security:
        - bearerAuth: []
      parameters:
        - name: roleName
          in: path
          required: true
          schema:
            type: string
        - name: resourceId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 移除成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
        '401':
          description: 未经授权
        '403':
          description: 禁止访问
        '404':
          description: 角色或资源未找到

  /api/permissions/users/{username}/roles/{roleName}/check:
    get:
      tags:
        - 权限管理
      summary: 检查用户是否拥有角色
      description: 检查指定用户是否拥有特定角色。需要管理员权限。
      operationId: hasRole
      security:
        - bearerAuth: []
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
        - name: roleName
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: boolean
        '401':
          description: 未经授权
        '403':
          description: 禁止访问

  /api/permissions/users/{username}/resources/check:
    get:
      tags:
        - 权限管理
      summary: 检查用户是否有权访问资源
      description: 检查指定用户是否有权访问某个URL。需要管理员权限。
      operationId: hasPermission
      security:
        - bearerAuth: []
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
        - name: resourceUrl
          in: query
          required: true
          schema:
            type: string
        - name: method
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: boolean
        '401':
          description: 未经授权
        '403':
          description: 禁止访问

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        email:
          type: string
          format: email
        firstName:
          type: string
        lastName:
          type: string
        enabled:
          type: boolean
        roles:
          type: array
          items:
            $ref: '#/components/schemas/Role'

    Role:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        resources:
          type: array
          items:
            $ref: '#/components/schemas/Resource'

    Resource:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        url:
          type: string
        method:
          type: string
        description:
          type: string