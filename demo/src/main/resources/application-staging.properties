# Staging Environment Configuration

# Server Configuration
server.port=${SERVER_PORT:8080}
server.servlet.context-path=/api
server.error.include-message=on-param
server.error.include-binding-errors=on-param
server.compression.enabled=true

# Redis Configuration
spring.data.redis.host=${REDIS_HOST:localhost}
spring.data.redis.port=${REDIS_PORT:6379}
spring.data.redis.password=${REDIS_PASSWORD:}
spring.data.redis.timeout=${REDIS_TIMEOUT:10000}
spring.data.redis.database=${REDIS_DATABASE:0}

# Cache Configuration
spring.cache.type=redis
spring.cache.redis.time-to-live=${CACHE_TTL:3600}
spring.cache.redis.cache-null-values=false

# JPA Configuration
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Database Configuration (PostgreSQL for staging)
spring.datasource.url=${DATABASE_URL:jdbc:postgresql://localhost:5432/employeedb_staging}
spring.datasource.username=${DATABASE_USERNAME:employee_staging}
spring.datasource.password=${DATABASE_PASSWORD:employee_staging_password}
spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.hikari.maximum-pool-size=${DB_POOL_SIZE:10}
spring.datasource.hikari.minimum-idle=${DB_POOL_MIN_IDLE:2}

# JWT Configuration
app.jwt.secret=${JWT_SECRET:}
app.jwt.expirationMs=${JWT_EXPIRATION:86400000}
app.jwt.refreshExpirationMs=${JWT_REFRESH_EXPIRATION:604800000}

# Email Configuration (Staging SMTP)
spring.mail.host=${MAIL_HOST:smtp.mailtrap.io}
spring.mail.port=${MAIL_PORT:2525}
spring.mail.username=${MAIL_USERNAME:}
spring.mail.password=${MAIL_PASSWORD:}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# File Upload Configuration
spring.servlet.multipart.max-file-size=${MAX_FILE_SIZE:25MB}
spring.servlet.multipart.max-request-size=${MAX_REQUEST_SIZE:25MB}

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics,env
management.endpoint.health.show-details=when-authorized
management.info.env.enabled=true

# Logging Configuration
logging.level.root=INFO
logging.level.com.example.demo=DEBUG
logging.level.org.springframework.security=INFO
logging.level.org.springframework.web=INFO
logging.level.org.hibernate=WARN
logging.level.org.springframework.mail=INFO
logging.file.name=${LOG_FILE:/var/log/employee-management-staging/application.log}
logging.logback.rollingpolicy.max-file-size=10MB
logging.logback.rollingpolicy.max-history=7

# WebSocket Configuration
app.websocket.allowed-origins=${WEBSOCKET_ALLOWED_ORIGINS:https://staging.yourdomain.com}
app.websocket.endpoint=/ws

# CORS Configuration
app.cors.allowed-origins=${CORS_ALLOWED_ORIGINS:https://staging.yourdomain.com}
app.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
app.cors.allowed-headers=*
app.cors.allow-credentials=true

# Security Configuration
app.security.jwt-header=Authorization
app.security.jwt-prefix=Bearer 
app.security.password-strength=${PASSWORD_STRENGTH:10}

# Session Configuration
server.servlet.session.timeout=${SESSION_TIMEOUT:30m}
server.servlet.session.cookie.secure=${COOKIE_SECURE:true}
server.servlet.session.cookie.http-only=true