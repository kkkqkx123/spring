# Production Environment Configuration

# Server Configuration
server.port=${SERVER_PORT:8080}
server.servlet.context-path=/api
server.error.include-message=never
server.error.include-binding-errors=never
server.error.include-stacktrace=never
server.compression.enabled=true
server.compression.mime-types=text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
server.compression.min-response-size=1024

# Redis Configuration
spring.redis.host=${REDIS_HOST:localhost}
spring.redis.port=${REDIS_PORT:6379}
spring.redis.password=${REDIS_PASSWORD:}
spring.redis.timeout=${REDIS_TIMEOUT:10000}
spring.redis.database=${REDIS_DATABASE:0}
spring.redis.jedis.pool.max-active=8
spring.redis.jedis.pool.max-idle=8
spring.redis.jedis.pool.min-idle=0
spring.redis.jedis.pool.max-wait=-1ms

# Cache Configuration
spring.cache.type=redis
spring.cache.redis.time-to-live=${CACHE_TTL:7200}
spring.cache.redis.cache-null-values=false

# JPA Configuration
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true

# Database Configuration (PostgreSQL for production)
spring.datasource.url=${DATABASE_URL:jdbc:postgresql://localhost:5432/employeedb}
spring.datasource.username=${DATABASE_USERNAME:employee_user}
spring.datasource.password=${DATABASE_PASSWORD:employee_password}
spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.hikari.maximum-pool-size=${DB_POOL_SIZE:20}
spring.datasource.hikari.minimum-idle=${DB_POOL_MIN_IDLE:5}
spring.datasource.hikari.connection-timeout=${DB_CONNECTION_TIMEOUT:30000}
spring.datasource.hikari.idle-timeout=${DB_IDLE_TIMEOUT:600000}
spring.datasource.hikari.max-lifetime=${DB_MAX_LIFETIME:1800000}

# JWT Configuration
app.jwt.secret=${JWT_SECRET:}
app.jwt.expirationMs=${JWT_EXPIRATION:86400000}
app.jwt.refreshExpirationMs=${JWT_REFRESH_EXPIRATION:604800000}

# Email Configuration
spring.mail.host=${MAIL_HOST:smtp.gmail.com}
spring.mail.port=${MAIL_PORT:587}
spring.mail.username=${MAIL_USERNAME:}
spring.mail.password=${MAIL_PASSWORD:}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.ssl.trust=${MAIL_HOST:smtp.gmail.com}

# File Upload Configuration
spring.servlet.multipart.max-file-size=${MAX_FILE_SIZE:50MB}
spring.servlet.multipart.max-request-size=${MAX_REQUEST_SIZE:50MB}

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when-authorized
management.info.env.enabled=true
management.metrics.export.prometheus.enabled=true

# Logging Configuration
logging.level.root=WARN
logging.level.com.example.demo=INFO
logging.level.org.springframework.security=WARN
logging.level.org.springframework.web=WARN
logging.level.org.hibernate=WARN
logging.level.org.springframework.mail=WARN
logging.file.name=${LOG_FILE:/var/log/employee-management/application.log}
logging.file.max-size=10MB
logging.file.max-history=30
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# WebSocket Configuration
app.websocket.allowed-origins=${WEBSOCKET_ALLOWED_ORIGINS:https://yourdomain.com}
app.websocket.endpoint=/ws

# CORS Configuration
app.cors.allowed-origins=${CORS_ALLOWED_ORIGINS:https://yourdomain.com}
app.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
app.cors.allowed-headers=*
app.cors.allow-credentials=true

# Security Configuration
app.security.jwt.header=Authorization
app.security.jwt.prefix=Bearer 
app.security.password.strength=${PASSWORD_STRENGTH:12}

# SSL Configuration (if using HTTPS)
server.ssl.enabled=${SSL_ENABLED:false}
server.ssl.key-store=${SSL_KEYSTORE:}
server.ssl.key-store-password=${SSL_KEYSTORE_PASSWORD:}
server.ssl.key-store-type=${SSL_KEYSTORE_TYPE:PKCS12}

# Session Configuration
server.servlet.session.timeout=${SESSION_TIMEOUT:30m}
server.servlet.session.cookie.secure=${COOKIE_SECURE:true}
server.servlet.session.cookie.http-only=true
server.servlet.session.cookie.same-site=strict